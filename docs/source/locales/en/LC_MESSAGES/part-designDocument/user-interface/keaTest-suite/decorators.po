# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, ECNU-SE-lab
# This file is distributed under the same license as the Kea package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kea 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-31 16:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:2
msgid "性质装饰器"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:4
msgid "本部分旨在解释 Kea 的性质定义装饰器是如何设计及实现的。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:7
msgid "功能说明与功能设计"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:9
msgid "在KeaTest中，使用装饰器定义性质。装饰器的作用是对函数本身进行修改。在Kea中，用户的初始化、前置条件、主路径函数都是一个函数， 我们使用装饰器获取函数体，并对这个函数体进行标记。由于python中函数为一等对象，我们使用装饰器获取函数体后可以动态地往这个函数对象中 设置属性，我们根据不同的装饰器，设置不同的MARKER属性标记。在Kea加载性质的时候，我们读取如下的数据结构， 并将如下的数据结构通过KeaTestElements类进行读取，并转换为方便Kea读取和处理的数据结构：KeaTestElements。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:21
msgid "从用户自定义KeaTest到运行时KeaTestElements的转换"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:24
msgid "性质的定义"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:26
msgid "下述的@rule和@precondition装饰器将用户定义的一条性质封装在数据结构Rule中，并对这个性质的函数进行使用RULE_MARKER进行标记。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:28
msgid "以下是Rule数据数据结构的定义。precondition用于存放一个函数对象，存储一个计算前置条件的函数。function用于存储这条性质的交互场景(interaction scenario)。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:41
msgid "@rule装饰器用于定义一条性质。其中，RULE_MARKER为一个常量。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:0
msgid "参数"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:44
msgid "``f: Callable[[Any], None]`` : 一个交互场景函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:0
msgid "返回"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:47
msgid "``Callable[[Any], None]`` : 被RULE_MARKER标记后已解析Rule的函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:65
msgid "@precondition前提条件指定了性质何时可以被执行。一个性质可以有多个前提条件，每个前提条件由 `@precondition` 指定。其中， PRECONDITIONS_MARKER为一个常量。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:69
msgid "``precond: Callable[[Any], bool]`` : 一个返回布尔值的已经被@rule装饰过的函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:72
msgid "``Callable[[Any], bool]`` : 被RULE_MARKER标记后已解析前置条件的函数"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:96
msgid "初始化函数的定义"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:98
msgid "@initializer定义一个初始化函数，用于应用的初始化，如跳过新手教程等。 下述的@initializer装饰器将用户定义的一条性质封装在数据结构Initializer中，并对这个性质的函数进行使用INITIALIZER_MARKER进行标记。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:101
msgid "以下是Initializer数据结构的定义。function用于存放一个函数对象，为初始化时要执行的一系列操作。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:110
msgid "@initializer装饰器用于定义一个初始化函数，其中，INITIALIZER_MARKER是一个常量。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:113
msgid "``f: Callable[[Any], None]`` : 定义了初始化事件的初始化函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:116
msgid "``Callable[[Any], None]`` : 被INITIALIZER_MARKER标记的初始化函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:132
msgid "主路径函数的定义"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:134
msgid "主路径指定了一系列事件，从应用起始页执行这些事件会将应用引到至性质的起始状态（满足前置条件的页面）。 下述的@mainPath装饰器将用户定义的一条性质封装在数据结构MainPath中，并对这个性质的函数进行使用MAINPATH_MARKER进行标记。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:137
msgid "以下是MainPath数据结构的定义。function用于存放用户定义的mainPath函数对象，path为对这个函数进行源代码处理后获取的详细路径步骤， 为一个存储了主路径中各个步骤的源代码的列表。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:152
msgid "@mainPath装饰器将用户定义的一条性质封装在数据结构MainPath中，其中，MAINPATH_MARKER是一个常量。"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:155
msgid "``f: Callable[[Any], None]`` : 定义了主路径事件的函数对象"
msgstr ""

#: ../../source/part-designDocument/user-interface/keaTest-suite/decorators.rst:158
msgid "``Callable[[Any], None]`` : 被MAINPATH_MARKER标记的初始化函数对象"
msgstr ""
